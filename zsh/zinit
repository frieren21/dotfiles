#!zsh

autoload -Uz @is-macos

# Override ZSH MACHTYPE detection to make zinit
# download amd64 binaries that work with rosetta
@is-macos && MACHTYPE="x86_64"

# xdg compatible paths
declare -gH -A ZINIT
ZINIT[BIN_DIR]="${XDG_CACHE_HOME}"/zinit/bin
ZINIT[HOME_DIR]="${XDG_CACHE_HOME}"/zinit
ZINIT[ZCOMPDUMP_PATH]="${XDG_CACHE_HOME}"/zcompdump

declare -gH ZPFX="${XDG_CACHE_HOME}"/zpfx
mkdir -p "${ZPFX}"/{bin,man/man{1..9}}
path=("${ZPFX}/bin" ${path})
manpath=("${ZPFX}/man" ${manpath})

# install zinit if missing
if [[ ! -e "${ZINIT[BIN_DIR]}/zinit.zsh" ]]; then
    git clone https://github.com/zdharma/zinit "${ZINIT[BIN_DIR]}" || return
fi

# load zinit into shell environment
source "${ZINIT[BIN_DIR]}"/zinit.zsh

# register local annex
:za-local-before-load-handler() {
    if [[ -z ${ICE[id-as]} ]]; then
        # use teleid basename by default
        ___ehid=${___etid:t}
        # remove shortcut prefix (OMZ::)
        ___ehid=${___ehid#*::}
        # remove file extension
        ___ehid=${___ehid%.zsh}
        # set ice as well
        ICE[id-as]=${___ehid}
    fi

    if [[
        ${___is_snippet} -ne 1 &&
        ${___etid} != */* &&
        ${+ICE[pack]} == 0
    ]]; then
        # auto null for unscoped plugins
        ___etid="zdharma/null"
        # set ice as well
        ICE[teleid]=${___etid}
    fi
}

:za-local-help-null-handler() { :; }

@zinit-register-annex "z-a-local" \
    hook:before-load-5 \
    :za-local-before-load-handler \
    :za-local-help-null-handler

# z-a-default-ice: set default ices
# https://github.com/zinit-zsh/z-a-default-ice
zinit for zinit-zsh/z-a-default-ice
zinit default-ice --quiet lucid light-mode

# z-a-linkbin: install symlinks into PATH
# https://github.com/NICHOLAS85/z-a-linkbin
zinit for NICHOLAS85/z-a-linkbin

# forward initial call
zinit "$@"
